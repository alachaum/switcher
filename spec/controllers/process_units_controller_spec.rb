require 'spec_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to specify the controller code that
# was generated by the Rails when you ran the scaffold generator.

describe ProcessUnitsController do

  def mock_process_unit(stubs={})
    @mock_process_unit ||= mock_model(ProcessUnit, stubs).as_null_object
  end

  describe "GET index" do
    it "assigns all process_units as @process_units" do
      ProcessUnit.stub(:all) { [mock_process_unit] }
      get :index
      assigns(:process_units).should eq([mock_process_unit])
    end
  end

  describe "GET show" do
    it "assigns the requested process_unit as @process_unit" do
      ProcessUnit.stub(:find).with("37") { mock_process_unit }
      get :show, :id => "37"
      assigns(:process_unit).should be(mock_process_unit)
    end
  end

  describe "GET new" do
    it "assigns a new process_unit as @process_unit" do
      ProcessUnit.stub(:new) { mock_process_unit }
      get :new
      assigns(:process_unit).should be(mock_process_unit)
    end
  end

  describe "GET edit" do
    it "assigns the requested process_unit as @process_unit" do
      ProcessUnit.stub(:find).with("37") { mock_process_unit }
      get :edit, :id => "37"
      assigns(:process_unit).should be(mock_process_unit)
    end
  end

  describe "POST create" do
    describe "with valid params" do
      it "assigns a newly created process_unit as @process_unit" do
        ProcessUnit.stub(:new).with({'these' => 'params'}) { mock_process_unit(:save => true) }
        post :create, :process_unit => {'these' => 'params'}
        assigns(:process_unit).should be(mock_process_unit)
      end

      it "redirects to the created process_unit" do
        ProcessUnit.stub(:new) { mock_process_unit(:save => true) }
        post :create, :process_unit => {}
        response.should redirect_to(process_unit_url(mock_process_unit))
      end
    end

    describe "with invalid params" do
      it "assigns a newly created but unsaved process_unit as @process_unit" do
        ProcessUnit.stub(:new).with({'these' => 'params'}) { mock_process_unit(:save => false) }
        post :create, :process_unit => {'these' => 'params'}
        assigns(:process_unit).should be(mock_process_unit)
      end

      it "re-renders the 'new' template" do
        ProcessUnit.stub(:new) { mock_process_unit(:save => false) }
        post :create, :process_unit => {}
        response.should render_template("new")
      end
    end
  end

  describe "PUT update" do
    describe "with valid params" do
      it "updates the requested process_unit" do
        ProcessUnit.stub(:find).with("37") { mock_process_unit }
        mock_process_unit.should_receive(:update_attributes).with({'these' => 'params'})
        put :update, :id => "37", :process_unit => {'these' => 'params'}
      end

      it "assigns the requested process_unit as @process_unit" do
        ProcessUnit.stub(:find) { mock_process_unit(:update_attributes => true) }
        put :update, :id => "1"
        assigns(:process_unit).should be(mock_process_unit)
      end

      it "redirects to the process_unit" do
        ProcessUnit.stub(:find) { mock_process_unit(:update_attributes => true) }
        put :update, :id => "1"
        response.should redirect_to(process_unit_url(mock_process_unit))
      end
    end

    describe "with invalid params" do
      it "assigns the process_unit as @process_unit" do
        ProcessUnit.stub(:find) { mock_process_unit(:update_attributes => false) }
        put :update, :id => "1"
        assigns(:process_unit).should be(mock_process_unit)
      end

      it "re-renders the 'edit' template" do
        ProcessUnit.stub(:find) { mock_process_unit(:update_attributes => false) }
        put :update, :id => "1"
        response.should render_template("edit")
      end
    end
  end

  describe "DELETE destroy" do
    it "destroys the requested process_unit" do
      ProcessUnit.stub(:find).with("37") { mock_process_unit }
      mock_process_unit.should_receive(:destroy)
      delete :destroy, :id => "37"
    end

    it "redirects to the process_units list" do
      ProcessUnit.stub(:find) { mock_process_unit }
      delete :destroy, :id => "1"
      response.should redirect_to(process_units_url)
    end
  end

end
